{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStackLearning\\\\FullStackProjects\\\\todo-app\\\\src\\\\components\\\\AddList\\\\index.jsx\",\n  _s = $RefreshSig$();\n//import React library for creating components\nimport React from \"react\";\n//import List component\nimport List from \"../List/index.jsx\";\n//import addList icon\nimport addSvg from \"../../assets/img/add.svg\";\n//import styles\nimport \"./AddList.scss\";\n//import Badge component\nimport Badge from \"../Badge/index.jsx\";\n//import close icon\nimport closeSvg from \"../../assets/img/close.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddListButton = ({\n  colors,\n  onAdd\n}) => {\n  _s();\n  //useState hook for hiding/showing add-list popup menu\n  const [visiblePopup, setVisiblePopUp] = React.useState(false);\n  //useState hook for showing selected color\n  const [selectedColor, setSelectColor] = React.useState(3);\n  //useState hook for setting text value in input\n  const [inputValue, setInputValue] = React.useState(\"\");\n\n  //function that resets all values of add list menu to default by clicking on close button\n  const onClose = () => {\n    setVisiblePopUp(false);\n    setInputValue(\"\");\n    setSelectColor(colors[0].id);\n  };\n\n  //function which creates new list by clicking on button\n  const addList = () => {\n    if (!inputValue) {\n      alert(\"Enter name of list\");\n      return;\n    }\n    const color = colors.filter(c => c.id === selectedColor)[0].name;\n    onAdd({\n      id: Math.random(),\n      name: inputValue,\n      color\n    });\n    // аfter adding new list hides popup menu\n    setVisiblePopUp(false);\n    //resets input value\n    setInputValue(\"\");\n    //sets default color\n    setSelectColor(colors[0].id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-list\",\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      onClick: () => setVisiblePopUp(!visiblePopup),\n      items: [{\n        className: \"list__add-button\",\n        icon: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: addSvg,\n          alt: \"addList icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 19\n        }, this),\n        name: \"Add List\"\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), visiblePopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-list-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: onClose,\n        className: \"add-list__popup-close-btn\",\n        src: closeSvg,\n        alt: \"Close Icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        className: \"field\",\n        type: \"text\",\n        placeholder: \"Name of List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-list__popup-colors\",\n        children: colors.map(color => /*#__PURE__*/_jsxDEV(Badge, {\n          onClick: () => setSelectColor(color.id),\n          color: color.name,\n          className: selectedColor === color.id && \"active\"\n        }, color.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addList,\n        className: \"button\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(AddListButton, \"xVzT2B+8wS3CyIK7pY8ySQ0m8yQ=\");\n_c = AddListButton;\nexport default AddListButton;\nvar _c;\n$RefreshReg$(_c, \"AddListButton\");","map":{"version":3,"names":["React","List","addSvg","Badge","closeSvg","jsxDEV","_jsxDEV","AddListButton","colors","onAdd","_s","visiblePopup","setVisiblePopUp","useState","selectedColor","setSelectColor","inputValue","setInputValue","onClose","id","addList","alert","color","filter","c","name","Math","random","className","children","onClick","items","icon","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","placeholder","map","_c","$RefreshReg$"],"sources":["C:/FullStackLearning/FullStackProjects/todo-app/src/components/AddList/index.jsx"],"sourcesContent":["//import React library for creating components\r\nimport React from \"react\";\r\n//import List component\r\nimport List from \"../List/index.jsx\";\r\n//import addList icon\r\nimport addSvg from \"../../assets/img/add.svg\";\r\n//import styles\r\nimport \"./AddList.scss\";\r\n//import Badge component\r\nimport Badge from \"../Badge/index.jsx\";\r\n//import close icon\r\nimport closeSvg from \"../../assets/img/close.svg\";\r\n\r\nconst AddListButton = ({ colors, onAdd }) => {\r\n  //useState hook for hiding/showing add-list popup menu\r\n  const [visiblePopup, setVisiblePopUp] = React.useState(false);\r\n  //useState hook for showing selected color\r\n  const [selectedColor, setSelectColor] = React.useState(3);\r\n  //useState hook for setting text value in input\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n\r\n  //function that resets all values of add list menu to default by clicking on close button\r\n  const onClose = () => {\r\n    setVisiblePopUp(false);\r\n    setInputValue(\"\");\r\n    setSelectColor(colors[0].id);\r\n  };\r\n\r\n  //function which creates new list by clicking on button\r\n  const addList = () => {\r\n    if (!inputValue) {\r\n      alert(\"Enter name of list\");\r\n      return;\r\n    }\r\n    const color = colors.filter((c) => c.id === selectedColor)[0].name;\r\n    onAdd({\r\n      id: Math.random(),\r\n      name: inputValue,\r\n      color,\r\n    });\r\n    // аfter adding new list hides popup menu\r\n    setVisiblePopUp(false);\r\n    //resets input value\r\n    setInputValue(\"\");\r\n    //sets default color\r\n    setSelectColor(colors[0].id);\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-list\">\r\n      <List\r\n        onClick={() => setVisiblePopUp(!visiblePopup)}\r\n        items={[\r\n          {\r\n            className: \"list__add-button\",\r\n            icon: <img src={addSvg} alt=\"addList icon\" />,\r\n            name: \"Add List\",\r\n          },\r\n        ]}\r\n      />\r\n      {visiblePopup && (\r\n        <div className=\"add-list-popup\">\r\n          <img\r\n            onClick={onClose}\r\n            className=\"add-list__popup-close-btn\"\r\n            src={closeSvg}\r\n            alt=\"Close Icon\"\r\n          />\r\n\r\n          <input\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n            className=\"field\"\r\n            type=\"text\"\r\n            placeholder=\"Name of List\"\r\n          />\r\n          <div className=\"add-list__popup-colors\">\r\n            {colors.map((color) => (\r\n              <Badge\r\n                onClick={() => setSelectColor(color.id)}\r\n                key={color.id}\r\n                color={color.name}\r\n                className={selectedColor === color.id && \"active\"}\r\n              />\r\n            ))}\r\n          </div>\r\n          <button onClick={addList} className=\"button\">\r\n            Add\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddListButton;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}