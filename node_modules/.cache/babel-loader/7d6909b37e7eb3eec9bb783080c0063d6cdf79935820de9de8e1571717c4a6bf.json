{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStackLearning\\\\FullStackProjects\\\\todo-app\\\\src\\\\components\\\\Tasks\\\\index.jsx\";\nimport React from \"react\";\n// import styles\nimport \"./Tasks.scss\";\n//import edit icon\nimport editSvg from \"../../assets/img/edit.svg\";\n//import library for working with requests\nimport axios from \"axios\";\n//import AddTaskForm component\nimport AddTaskForm from \"./AddTaskFrom\";\n//import Task item component\nimport Task from \"./Task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = ({\n  list,\n  onEditTitle,\n  onAddTask,\n  onRemoveTask,\n  onEditTask,\n  withoutEmpty\n}) => {\n  //function that changes title of list\n  const editTitle = () => {\n    //takes title text value from user\n    const newTitle = window.prompt(\"Name of list\", list.name);\n    //function that changes title will only work in case if user еntered new name\n    if (newTitle) {\n      onEditTitle(list.id, newTitle);\n      //updates list's title on Back-end\n      axios.patch(\"http://localhost:3001/lists/\" + list.id, {\n        name: newTitle\n      }).catch(() => {\n        alert(\"Cant update item title\");\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: list.color.hex\n      },\n      className: \"tasks__title\",\n      children: [list.name, /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: editTitle,\n        src: editSvg,\n        alt: \"edit icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks__items\",\n      children: [!withoutEmpty && list.tasks && !list.tasks.length && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"There are no tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), list.tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        list: list,\n        onEdit: onEditTask,\n        onRemove: onRemoveTask,\n        ...task\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      list: list,\n      onAddTask: onAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","editSvg","axios","AddTaskForm","Task","jsxDEV","_jsxDEV","Tasks","list","onEditTitle","onAddTask","onRemoveTask","onEditTask","withoutEmpty","editTitle","newTitle","window","prompt","name","id","patch","catch","alert","className","children","style","color","hex","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","tasks","length","map","task","onEdit","onRemove","_c","$RefreshReg$"],"sources":["C:/FullStackLearning/FullStackProjects/todo-app/src/components/Tasks/index.jsx"],"sourcesContent":["import React from \"react\";\r\n// import styles\r\nimport \"./Tasks.scss\";\r\n//import edit icon\r\nimport editSvg from \"../../assets/img/edit.svg\";\r\n//import library for working with requests\r\nimport axios from \"axios\";\r\n//import AddTaskForm component\r\nimport AddTaskForm from \"./AddTaskFrom\";\r\n//import Task item component\r\nimport Task from \"./Task\";\r\n\r\nconst Tasks = ({\r\n  list,\r\n  onEditTitle,\r\n  onAddTask,\r\n  onRemoveTask,\r\n  onEditTask,\r\n  withoutEmpty,\r\n}) => {\r\n  //function that changes title of list\r\n  const editTitle = () => {\r\n    //takes title text value from user\r\n    const newTitle = window.prompt(\"Name of list\", list.name);\r\n    //function that changes title will only work in case if user еntered new name\r\n    if (newTitle) {\r\n      onEditTitle(list.id, newTitle);\r\n      //updates list's title on Back-end\r\n      axios\r\n        .patch(\"http://localhost:3001/lists/\" + list.id, {\r\n          name: newTitle,\r\n        })\r\n        .catch(() => {\r\n          alert(\"Cant update item title\");\r\n        });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks\">\r\n      <h2 style={{ color: list.color.hex }} className=\"tasks__title\">\r\n        {list.name}\r\n        {/* Edit list name button */}\r\n        <img onClick={editTitle} src={editSvg} alt=\"edit icon\" />\r\n      </h2>\r\n\r\n      <div className=\"tasks__items\">\r\n        {/* if there is no tasks in list item displays text */}\r\n        {!withoutEmpty && list.tasks && !list.tasks.length && (\r\n          <h2>There are no tasks</h2>\r\n        )}\r\n        {list.tasks.map((task) => (\r\n          <Task\r\n            key={task.id}\r\n            list={list}\r\n            onEdit={onEditTask}\r\n            onRemove={onRemoveTask}\r\n            {...task}\r\n          />\r\n        ))}\r\n      </div>\r\n      <AddTaskForm list={list} onAddTask={onAddTask} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAO,cAAc;AACrB;AACA,OAAOC,OAAO,MAAM,2BAA2B;AAC/C;AACA,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,WAAW,MAAM,eAAe;AACvC;AACA,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAC;EACbC,IAAI;EACJC,WAAW;EACXC,SAAS;EACTC,YAAY;EACZC,UAAU;EACVC;AACF,CAAC,KAAK;EACJ;EACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB;IACA,MAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAM,CAAC,cAAc,EAAET,IAAI,CAACU,IAAI,CAAC;IACzD;IACA,IAAIH,QAAQ,EAAE;MACZN,WAAW,CAACD,IAAI,CAACW,EAAE,EAAEJ,QAAQ,CAAC;MAC9B;MACAb,KAAK,CACFkB,KAAK,CAAC,8BAA8B,GAAGZ,IAAI,CAACW,EAAE,EAAE;QAC/CD,IAAI,EAAEH;MACR,CAAC,CAAC,CACDM,KAAK,CAAC,MAAM;QACXC,KAAK,CAAC,wBAAwB,CAAC;MACjC,CAAC,CAAC;IACN;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKiB,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBlB,OAAA;MAAImB,KAAK,EAAE;QAAEC,KAAK,EAAElB,IAAI,CAACkB,KAAK,CAACC;MAAI,CAAE;MAACJ,SAAS,EAAC,cAAc;MAAAC,QAAA,GAC3DhB,IAAI,CAACU,IAAI,eAEVZ,OAAA;QAAKsB,OAAO,EAAEd,SAAU;QAACe,GAAG,EAAE5B,OAAQ;QAAC6B,GAAG,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,eAEL5B,OAAA;MAAKiB,SAAS,EAAC,cAAc;MAAAC,QAAA,GAE1B,CAACX,YAAY,IAAIL,IAAI,CAAC2B,KAAK,IAAI,CAAC3B,IAAI,CAAC2B,KAAK,CAACC,MAAM,iBAChD9B,OAAA;QAAAkB,QAAA,EAAI;MAAkB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAC3B,EACA1B,IAAI,CAAC2B,KAAK,CAACE,GAAG,CAAEC,IAAI,iBACnBhC,OAAA,CAACF,IAAI;QAEHI,IAAI,EAAEA,IAAK;QACX+B,MAAM,EAAE3B,UAAW;QACnB4B,QAAQ,EAAE7B,YAAa;QAAA,GACnB2B;MAAI,GAJHA,IAAI,CAACnB,EAAE;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKb,CACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN5B,OAAA,CAACH,WAAW;MAACK,IAAI,EAAEA,IAAK;MAACE,SAAS,EAAEA;IAAU;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAACO,EAAA,GApDIlC,KAAK;AAsDX,eAAeA,KAAK;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}