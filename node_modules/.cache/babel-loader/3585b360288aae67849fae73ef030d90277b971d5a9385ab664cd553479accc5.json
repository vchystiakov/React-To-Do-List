{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStackLearning\\\\FullStackProjects\\\\todo-app\\\\src\\\\components\\\\AddList\\\\index.jsx\",\n  _s = $RefreshSig$();\n//import React library for creating components\nimport React from \"react\";\n//import List component\nimport List from \"../List/index.jsx\";\n//import addList icon\nimport addSvg from \"../../assets/img/add.svg\";\n//import styles\nimport \"./AddList.scss\";\n//import Badge component\nimport Badge from \"../Badge/index.jsx\";\n//import close icon\nimport closeSvg from \"../../assets/img/close.svg\";\n//import library for working with requests\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddListButton = ({\n  colors,\n  onAdd\n}) => {\n  _s();\n  //useState hook for hiding/showing add-list popup menu\n  const [visiblePopup, setVisiblePopUp] = React.useState(false);\n  //useState hook for showing selected color\n  const [selectedColor, setSelectColor] = React.useState(3);\n  //useState hook for setting text value in input\n  const [inputValue, setInputValue] = React.useState(\"\");\n  //useState hook for setting state of page\n  const [isLoading, setIsLoading] = React.useState(false);\n\n  //makes first color as default after component was rendered\n  React.useEffect(() => {\n    if (Array.isArray(colors)) {\n      setSelectColor(colors[0].id);\n    }\n  }, [colors]);\n\n  //function that resets all values of add list menu to default by clicking on close button\n  const onClose = () => {\n    setVisiblePopUp(false);\n    setInputValue(\"\");\n    setSelectColor(colors[0].id);\n  };\n\n  //function which creates new list by clicking on button\n  const addList = () => {\n    if (!inputValue) {\n      alert(\"Enter name of list\");\n      return;\n    }\n    //before making request sets loading state of page\n    setIsLoading(true);\n\n    //post request that creates list on back-end(fake json server)\n    axios.post(\" http://localhost:3001/lists\", {\n      name: inputValue,\n      colorId: selectedColor\n    }) //after getting response server returns data\n    .then(({\n      data\n    }) => {\n      const color = colors.filter(c => c.id === selectedColor)[0];\n      //adds selected color to request data and creates new object\n      const listObj = {\n        ...data,\n        color,\n        tasks: []\n      };\n      onAdd(listObj);\n      onClose();\n    }).catch(() => {\n      alert(\"Error while adding a list!\");\n    }).finally(() => {\n      //changing state of page to loaded\n      setIsLoading(false);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"add-list\",\n    children: [/*#__PURE__*/_jsxDEV(List, {\n      onClick: () => setVisiblePopUp(!visiblePopup),\n      items: [{\n        className: \"list__add-button\",\n        icon: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: addSvg,\n          alt: \"addList icon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 19\n        }, this),\n        name: \"Add List\"\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), visiblePopup && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"add-list-popup\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: onClose,\n        className: \"add-list__popup-close-btn\",\n        src: closeSvg,\n        alt: \"Close Icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        value: inputValue,\n        onChange: e => setInputValue(e.target.value),\n        className: \"field\",\n        type: \"text\",\n        placeholder: \"Name of List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-list__popup-colors\",\n        children: colors.map(color => /*#__PURE__*/_jsxDEV(Badge, {\n          onClick: () => setSelectColor(color.id),\n          color: color.name,\n          className: selectedColor === color.id && \"active\"\n        }, color.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addList,\n        className: \"button\",\n        children: isLoading ? \"Adding...\" : \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_s(AddListButton, \"yMTZhtinjzJcppE30uVHyooCKnA=\");\n_c = AddListButton;\nexport default AddListButton;\nvar _c;\n$RefreshReg$(_c, \"AddListButton\");","map":{"version":3,"names":["React","List","addSvg","Badge","closeSvg","axios","jsxDEV","_jsxDEV","AddListButton","colors","onAdd","_s","visiblePopup","setVisiblePopUp","useState","selectedColor","setSelectColor","inputValue","setInputValue","isLoading","setIsLoading","useEffect","Array","isArray","id","onClose","addList","alert","post","name","colorId","then","data","color","filter","c","listObj","tasks","catch","finally","className","children","onClick","items","icon","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","type","placeholder","map","_c","$RefreshReg$"],"sources":["C:/FullStackLearning/FullStackProjects/todo-app/src/components/AddList/index.jsx"],"sourcesContent":["//import React library for creating components\r\nimport React from \"react\";\r\n//import List component\r\nimport List from \"../List/index.jsx\";\r\n//import addList icon\r\nimport addSvg from \"../../assets/img/add.svg\";\r\n//import styles\r\nimport \"./AddList.scss\";\r\n//import Badge component\r\nimport Badge from \"../Badge/index.jsx\";\r\n//import close icon\r\nimport closeSvg from \"../../assets/img/close.svg\";\r\n//import library for working with requests\r\nimport axios from \"axios\";\r\n\r\nconst AddListButton = ({ colors, onAdd }) => {\r\n  //useState hook for hiding/showing add-list popup menu\r\n  const [visiblePopup, setVisiblePopUp] = React.useState(false);\r\n  //useState hook for showing selected color\r\n  const [selectedColor, setSelectColor] = React.useState(3);\r\n  //useState hook for setting text value in input\r\n  const [inputValue, setInputValue] = React.useState(\"\");\r\n  //useState hook for setting state of page\r\n  const [isLoading, setIsLoading] = React.useState(false);\r\n\r\n  //makes first color as default after component was rendered\r\n  React.useEffect(() => {\r\n    if (Array.isArray(colors)) {\r\n      setSelectColor(colors[0].id);\r\n    }\r\n  }, [colors]);\r\n\r\n  //function that resets all values of add list menu to default by clicking on close button\r\n  const onClose = () => {\r\n    setVisiblePopUp(false);\r\n    setInputValue(\"\");\r\n    setSelectColor(colors[0].id);\r\n  };\r\n\r\n  //function which creates new list by clicking on button\r\n  const addList = () => {\r\n    if (!inputValue) {\r\n      alert(\"Enter name of list\");\r\n      return;\r\n    }\r\n    //before making request sets loading state of page\r\n    setIsLoading(true);\r\n\r\n    //post request that creates list on back-end(fake json server)\r\n    axios\r\n      .post(\" http://localhost:3001/lists\", {\r\n        name: inputValue,\r\n        colorId: selectedColor,\r\n      }) //after getting response server returns data\r\n      .then(({ data }) => {\r\n        const color = colors.filter((c) => c.id === selectedColor)[0];\r\n        //adds selected color to request data and creates new object\r\n        const listObj = { ...data, color, tasks: [] };\r\n        onAdd(listObj);\r\n        onClose();\r\n      })\r\n      .catch(() => {\r\n        alert(\"Error while adding a list!\");\r\n      })\r\n      .finally(() => {\r\n        //changing state of page to loaded\r\n        setIsLoading(false);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"add-list\">\r\n      <List\r\n        onClick={() => setVisiblePopUp(!visiblePopup)}\r\n        items={[\r\n          {\r\n            className: \"list__add-button\",\r\n            icon: <img src={addSvg} alt=\"addList icon\" />,\r\n            name: \"Add List\",\r\n          },\r\n        ]}\r\n      />\r\n      {visiblePopup && (\r\n        <div className=\"add-list-popup\">\r\n          <img\r\n            onClick={onClose}\r\n            className=\"add-list__popup-close-btn\"\r\n            src={closeSvg}\r\n            alt=\"Close Icon\"\r\n          />\r\n\r\n          <input\r\n            value={inputValue}\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n            className=\"field\"\r\n            type=\"text\"\r\n            placeholder=\"Name of List\"\r\n          />\r\n          <div className=\"add-list__popup-colors\">\r\n            {colors.map((color) => (\r\n              <Badge\r\n                onClick={() => setSelectColor(color.id)}\r\n                key={color.id}\r\n                color={color.name}\r\n                className={selectedColor === color.id && \"active\"}\r\n              />\r\n            ))}\r\n          </div>\r\n          <button onClick={addList} className=\"button\">\r\n            {isLoading ? \"Adding...\" : \"Add\"}\r\n          </button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddListButton;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}