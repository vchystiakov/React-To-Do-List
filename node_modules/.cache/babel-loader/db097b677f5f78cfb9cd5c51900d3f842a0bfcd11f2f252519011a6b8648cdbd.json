{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStackLearning\\\\FullStackProjects\\\\todo-app\\\\src\\\\components\\\\Tasks\\\\AddTaskFrom.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\n//import add icon\nimport addSvg from \"../../assets/img/add.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddTaskForm = ({\n  list,\n  AddTaskForm\n}) => {\n  _s();\n  //useState hook switches visibility of form\n  const [visibleForm, setVisibleForm] = useState(false);\n  //useState hook for changing text value in input form\n  const [inputValue, setInputValue] = useState(\"\");\n\n  // function that switches visibility state of form\n  const toggleFormVisible = () => {\n    setVisibleForm(!visibleForm);\n    //clears input value\n    setInputValue(\"\");\n  };\n\n  //function that will add created Task to list of Tasks\n  const addTask = () => {\n    //callback function that will hide add task form after creating task\n    toggleFormVisible();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks__form\",\n    children: !visibleForm ?\n    /*#__PURE__*/\n    // Add New task blocks - appears if visible Form state is false\n    _jsxDEV(\"div\", {\n      onClick: toggleFormVisible,\n      className: \"tasks__form-new\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: addSvg,\n        alt: \"Add icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"New Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this) :\n    /*#__PURE__*/\n    // Create Task Form block - appears if visible Form State is true\n    _jsxDEV(\"div\", {\n      className: \"visible__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        value: inputValue,\n        className: \"field\",\n        type: \"text\",\n        placeholder: \"Task text\",\n        onChange: e => setInputValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks__form-block\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTask,\n          className: \"button\",\n          children: \"Add Task\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleFormVisible,\n          className: \"button button--grey\",\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(AddTaskForm, \"gVjqUurSCs2m5cihdx02eF1i7w8=\");\n_c = AddTaskForm;\nexport default AddTaskForm;\nvar _c;\n$RefreshReg$(_c, \"AddTaskForm\");","map":{"version":3,"names":["React","useState","addSvg","jsxDEV","_jsxDEV","AddTaskForm","list","_s","visibleForm","setVisibleForm","inputValue","setInputValue","toggleFormVisible","addTask","className","children","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","value","type","placeholder","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/FullStackLearning/FullStackProjects/todo-app/src/components/Tasks/AddTaskFrom.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\n//import add icon\r\nimport addSvg from \"../../assets/img/add.svg\";\r\n\r\nconst AddTaskForm = ({ list, AddTaskForm }) => {\r\n  //useState hook switches visibility of form\r\n  const [visibleForm, setVisibleForm] = useState(false);\r\n  //useState hook for changing text value in input form\r\n  const [inputValue, setInputValue] = useState(\"\");\r\n\r\n  // function that switches visibility state of form\r\n  const toggleFormVisible = () => {\r\n    setVisibleForm(!visibleForm);\r\n    //clears input value\r\n    setInputValue(\"\");\r\n  };\r\n\r\n  //function that will add created Task to list of Tasks\r\n  const addTask = () => {\r\n    //callback function that will hide add task form after creating task\r\n    toggleFormVisible();\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks__form\">\r\n      {!visibleForm ? (\r\n        // Add New task blocks - appears if visible Form state is false\r\n        <div onClick={toggleFormVisible} className=\"tasks__form-new\">\r\n          <img src={addSvg} alt=\"Add icon\" />\r\n          <span>New Task</span>\r\n        </div>\r\n      ) : (\r\n        // Create Task Form block - appears if visible Form State is true\r\n        <div className=\"visible__form\">\r\n          <input\r\n            value={inputValue}\r\n            className=\"field\"\r\n            type=\"text\"\r\n            placeholder=\"Task text\"\r\n            onChange={(e) => setInputValue(e.target.value)}\r\n          />\r\n          <div className=\"tasks__form-block\">\r\n            {/* button that adds task */}\r\n            <button onClick={addTask} className=\"button\">\r\n              Add Task\r\n            </button>\r\n            {/* button that hides form */}\r\n            <button onClick={toggleFormVisible} className=\"button button--grey\">\r\n              Cancel\r\n            </button>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTaskForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC;AACA,OAAOC,MAAM,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,MAAMC,WAAW,GAAGA,CAAC;EAAEC,IAAI;EAAED;AAAY,CAAC,KAAK;EAAAE,EAAA;EAC7C;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EACrD;EACA,MAAM,CAACS,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMW,iBAAiB,GAAGA,CAAA,KAAM;IAC9BH,cAAc,CAAC,CAACD,WAAW,CAAC;IAC5B;IACAG,aAAa,CAAC,EAAE,CAAC;EACnB,CAAC;;EAED;EACA,MAAME,OAAO,GAAGA,CAAA,KAAM;IACpB;IACAD,iBAAiB,CAAC,CAAC;EACrB,CAAC;EAED,oBACER,OAAA;IAAKU,SAAS,EAAC,aAAa;IAAAC,QAAA,EACzB,CAACP,WAAW;IAAA;IACX;IACAJ,OAAA;MAAKY,OAAO,EAAEJ,iBAAkB;MAACE,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC1DX,OAAA;QAAKa,GAAG,EAAEf,MAAO;QAACgB,GAAG,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnClB,OAAA;QAAAW,QAAA,EAAM;MAAQ;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC;IAAA;IAEN;IACAlB,OAAA;MAAKU,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BX,OAAA;QACEmB,KAAK,EAAEb,UAAW;QAClBI,SAAS,EAAC,OAAO;QACjBU,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,WAAW;QACvBC,QAAQ,EAAGC,CAAC,IAAKhB,aAAa,CAACgB,CAAC,CAACC,MAAM,CAACL,KAAK;MAAE;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACFlB,OAAA;QAAKU,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAEhCX,OAAA;UAAQY,OAAO,EAAEH,OAAQ;UAACC,SAAS,EAAC,QAAQ;UAAAC,QAAA,EAAC;QAE7C;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAETlB,OAAA;UAAQY,OAAO,EAAEJ,iBAAkB;UAACE,SAAS,EAAC,qBAAqB;UAAAC,QAAA,EAAC;QAEpE;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACN;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CAnDIF,WAAW;AAAAwB,EAAA,GAAXxB,WAAW;AAqDjB,eAAeA,WAAW;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}