{"ast":null,"code":"var _jsxFileName = \"C:\\\\FullStackLearning\\\\FullStackProjects\\\\todo-app\\\\src\\\\components\\\\Tasks\\\\index.jsx\";\nimport React from \"react\";\n// import styles\nimport \"./Tasks.scss\";\n//import edit icon\nimport editSvg from \"../../assets/img/edit.svg\";\n//import library for working with requests\nimport axios from \"axios\";\n//import AddTaskForm component\nimport AddTaskForm from \"./AddTaskFrom\";\n//import Task item component\nimport Task from \"./Task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Tasks = ({\n  list,\n  onEditTitle,\n  onAddTask,\n  withoutEmpty\n}) => {\n  //function that changes title\n  const editTitle = () => {\n    //new title witch is taken from user\n    const newTitle = window.prompt(\"Name of list\", list.name);\n    //function that changes title will only work in case if user еntered new name\n    if (newTitle) {\n      onEditTitle(list.id, newTitle);\n      //changes title on Back-end\n      axios.patch(\"http://localhost:3001/lists/\" + list.id, {\n        name: newTitle\n      }).catch(() => {\n        alert(\"Cant update item title\");\n      });\n    }\n  };\n  const onRemove = taskId => {\n    if (window.confirm(\"Do you really want to delete task?\")) {\n      //deletes task on Back-end\n      axios.delete(\"http://localhost:3001/tasks/\" + taskId).catch(() => {\n        alert(\"Cant update item title\");\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tasks\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: list.color.hex\n      },\n      className: \"tasks__title\",\n      children: [list.name, /*#__PURE__*/_jsxDEV(\"img\", {\n        onClick: editTitle,\n        src: editSvg,\n        alt: \"edit icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tasks__items\",\n      children: [!withoutEmpty && !list.tasks.length && /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"There are no tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 49\n      }, this), list.tasks.map(task => /*#__PURE__*/_jsxDEV(Task, {\n        ...task\n      }, task.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      list: list,\n      onAddTask: onAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = Tasks;\nexport default Tasks;\nvar _c;\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"names":["React","editSvg","axios","AddTaskForm","Task","jsxDEV","_jsxDEV","Tasks","list","onEditTitle","onAddTask","withoutEmpty","editTitle","newTitle","window","prompt","name","id","patch","catch","alert","onRemove","taskId","confirm","delete","className","children","style","color","hex","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","tasks","length","map","task","_c","$RefreshReg$"],"sources":["C:/FullStackLearning/FullStackProjects/todo-app/src/components/Tasks/index.jsx"],"sourcesContent":["import React from \"react\";\r\n// import styles\r\nimport \"./Tasks.scss\";\r\n//import edit icon\r\nimport editSvg from \"../../assets/img/edit.svg\";\r\n//import library for working with requests\r\nimport axios from \"axios\";\r\n//import AddTaskForm component\r\nimport AddTaskForm from \"./AddTaskFrom\";\r\n//import Task item component\r\nimport Task from \"./Task\";\r\n\r\nconst Tasks = ({ list, onEditTitle, onAddTask, withoutEmpty }) => {\r\n  //function that changes title\r\n  const editTitle = () => {\r\n    //new title witch is taken from user\r\n    const newTitle = window.prompt(\"Name of list\", list.name);\r\n    //function that changes title will only work in case if user еntered new name\r\n    if (newTitle) {\r\n      onEditTitle(list.id, newTitle);\r\n      //changes title on Back-end\r\n      axios\r\n        .patch(\"http://localhost:3001/lists/\" + list.id, {\r\n          name: newTitle,\r\n        })\r\n        .catch(() => {\r\n          alert(\"Cant update item title\");\r\n        });\r\n    }\r\n  };\r\n\r\n  const onRemove = (taskId) => {\r\n    if (window.confirm(\"Do you really want to delete task?\")) {\r\n      //deletes task on Back-end\r\n      axios.delete(\"http://localhost:3001/tasks/\" + taskId).catch(() => {\r\n        alert(\"Cant update item title\");\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"tasks\">\r\n      <h2 style={{ color: list.color.hex }} className=\"tasks__title\">\r\n        {list.name}\r\n        {/* Edit list name button */}\r\n        <img onClick={editTitle} src={editSvg} alt=\"edit icon\" />\r\n      </h2>\r\n\r\n      <div className=\"tasks__items\">\r\n        {/* if there is no tasks in list item displays text */}\r\n        {!withoutEmpty && !list.tasks.length && <h2>There are no tasks</h2>}\r\n        {list.tasks.map((task) => (\r\n          <Task key={task.id} {...task} />\r\n        ))}\r\n      </div>\r\n      <AddTaskForm list={list} onAddTask={onAddTask} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;AACA,OAAO,cAAc;AACrB;AACA,OAAOC,OAAO,MAAM,2BAA2B;AAC/C;AACA,OAAOC,KAAK,MAAM,OAAO;AACzB;AACA,OAAOC,WAAW,MAAM,eAAe;AACvC;AACA,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,KAAK,GAAGA,CAAC;EAAEC,IAAI;EAAEC,WAAW;EAAEC,SAAS;EAAEC;AAAa,CAAC,KAAK;EAChE;EACA,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB;IACA,MAAMC,QAAQ,GAAGC,MAAM,CAACC,MAAM,CAAC,cAAc,EAAEP,IAAI,CAACQ,IAAI,CAAC;IACzD;IACA,IAAIH,QAAQ,EAAE;MACZJ,WAAW,CAACD,IAAI,CAACS,EAAE,EAAEJ,QAAQ,CAAC;MAC9B;MACAX,KAAK,CACFgB,KAAK,CAAC,8BAA8B,GAAGV,IAAI,CAACS,EAAE,EAAE;QAC/CD,IAAI,EAAEH;MACR,CAAC,CAAC,CACDM,KAAK,CAAC,MAAM;QACXC,KAAK,CAAC,wBAAwB,CAAC;MACjC,CAAC,CAAC;IACN;EACF,CAAC;EAED,MAAMC,QAAQ,GAAIC,MAAM,IAAK;IAC3B,IAAIR,MAAM,CAACS,OAAO,CAAC,oCAAoC,CAAC,EAAE;MACxD;MACArB,KAAK,CAACsB,MAAM,CAAC,8BAA8B,GAAGF,MAAM,CAAC,CAACH,KAAK,CAAC,MAAM;QAChEC,KAAK,CAAC,wBAAwB,CAAC;MACjC,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACEd,OAAA;IAAKmB,SAAS,EAAC,OAAO;IAAAC,QAAA,gBACpBpB,OAAA;MAAIqB,KAAK,EAAE;QAAEC,KAAK,EAAEpB,IAAI,CAACoB,KAAK,CAACC;MAAI,CAAE;MAACJ,SAAS,EAAC,cAAc;MAAAC,QAAA,GAC3DlB,IAAI,CAACQ,IAAI,eAEVV,OAAA;QAAKwB,OAAO,EAAElB,SAAU;QAACmB,GAAG,EAAE9B,OAAQ;QAAC+B,GAAG,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvD,CAAC,eAEL9B,OAAA;MAAKmB,SAAS,EAAC,cAAc;MAAAC,QAAA,GAE1B,CAACf,YAAY,IAAI,CAACH,IAAI,CAAC6B,KAAK,CAACC,MAAM,iBAAIhC,OAAA;QAAAoB,QAAA,EAAI;MAAkB;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAClE5B,IAAI,CAAC6B,KAAK,CAACE,GAAG,CAAEC,IAAI,iBACnBlC,OAAA,CAACF,IAAI;QAAA,GAAmBoC;MAAI,GAAjBA,IAAI,CAACvB,EAAE;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAChC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN9B,OAAA,CAACH,WAAW;MAACK,IAAI,EAAEA,IAAK;MAACE,SAAS,EAAEA;IAAU;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAACK,EAAA,GA9CIlC,KAAK;AAgDX,eAAeA,KAAK;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}